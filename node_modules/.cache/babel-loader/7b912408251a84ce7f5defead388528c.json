{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      url,\n      headers\n    } = _ref;\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _checkResult(res) {\n    if (res.ok) {\n      return res.json();\n    }\n\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  _fetch(url, params) {\n    return fetch(url, {\n      headers: this._headers,\n      ...params\n    }).then(res => {\n      return this._checkResult(res);\n    });\n  }\n\n  getAllCards() {\n    return this._fetch(`${this._url}cards`, {\n      method: \"GET\"\n    });\n  }\n\n  getUserInfo() {\n    return this._fetch(`${this._url}users/me`, {\n      method: \"GET\"\n    });\n  }\n\n  updateUserInfo(_ref2) {\n    let {\n      name,\n      job\n    } = _ref2;\n    return this._fetch(`${this._url}users/me`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name,\n        about: job\n      })\n    });\n  }\n\n  createNewCard(_ref3) {\n    let {\n      name,\n      link\n    } = _ref3;\n    return this._fetch(`${this._url}cards`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link\n      })\n    });\n  }\n\n  addLike(id) {\n    return this._fetch(`${this._url}cards/${id}/likes`, {\n      method: \"PUT\"\n    });\n  }\n\n  deleteLike(id) {\n    return this._fetch(`${this._url}cards/${id}/likes`, {\n      method: \"DELETE\"\n    });\n  }\n\n  deleteCard(id) {\n    return this._fetch(`${this._url}cards/${id}`, {\n      method: \"DELETE\"\n    });\n  }\n\n  updateAvatar(link) {\n    return this._fetch(`${this._url}users/me/avatar`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: link\n      })\n    });\n  }\n\n}\n\nexport const api = new Api({\n  url: \"https://nomoreparties.co/v1/cohort-40/\",\n  headers: {\n    authorization: \"4262d86a-0c05-431c-aa2a-8625ad9b488b\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"names":["Api","constructor","url","headers","_url","_headers","_checkResult","res","ok","json","Promise","reject","status","_fetch","params","fetch","then","getAllCards","method","getUserInfo","updateUserInfo","name","job","body","JSON","stringify","about","createNewCard","link","addLike","id","deleteLike","deleteCard","updateAvatar","avatar","api","authorization"],"sources":["/Users/mac/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\n  constructor({ url, headers }) {\n    this._url = url;\n    this._headers = headers;\n  }\n\n  _checkResult(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  _fetch(url, params) {\n    return fetch(url, { headers: this._headers, ...params }).then((res) => {\n      return this._checkResult(res);\n    });\n  }\n\n  getAllCards() {\n    return this._fetch(`${this._url}cards`, {\n      method: \"GET\",\n    });\n  }\n\n  getUserInfo() {\n    return this._fetch(`${this._url}users/me`, {\n      method: \"GET\",\n    });\n  }\n\n  updateUserInfo({ name, job }) {\n    return this._fetch(`${this._url}users/me`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        name,\n        about: job,\n      }),\n    });\n  }\n\n  createNewCard({ name, link }) {\n    return this._fetch(`${this._url}cards`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        name,\n        link,\n      }),\n    });\n  }\n\n  addLike(id) {\n    return this._fetch(`${this._url}cards/${id}/likes`, {\n      method: \"PUT\",\n    });\n  }\n\n  deleteLike(id) {\n    return this._fetch(`${this._url}cards/${id}/likes`, {\n      method: \"DELETE\",\n    });\n  }\n\n  deleteCard(id) {\n    return this._fetch(`${this._url}cards/${id}`, {\n      method: \"DELETE\",\n    });\n  }\n\n  updateAvatar(link) {\n    return this._fetch(`${this._url}users/me/avatar`, {\n      method: \"PATCH\",\n      body: JSON.stringify({\n        avatar: link,\n      }),\n    });\n  }\n}\n\nexport const api = new Api({\n  url: \"https://nomoreparties.co/v1/cohort-40/\",\n  headers: {\n    authorization: \"4262d86a-0c05-431c-aa2a-8625ad9b488b\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n"],"mappings":"AAAA,MAAMA,GAAN,CAAU;EACRC,WAAW,OAAmB;IAAA,IAAlB;MAAEC,GAAF;MAAOC;IAAP,CAAkB;IAC5B,KAAKC,IAAL,GAAYF,GAAZ;IACA,KAAKG,QAAL,GAAgBF,OAAhB;EACD;;EAEDG,YAAY,CAACC,GAAD,EAAM;IAChB,IAAIA,GAAG,CAACC,EAAR,EAAY;MACV,OAAOD,GAAG,CAACE,IAAJ,EAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAgB,WAAUJ,GAAG,CAACK,MAAO,EAArC,CAAP;EACD;;EAEDC,MAAM,CAACX,GAAD,EAAMY,MAAN,EAAc;IAClB,OAAOC,KAAK,CAACb,GAAD,EAAM;MAAEC,OAAO,EAAE,KAAKE,QAAhB;MAA0B,GAAGS;IAA7B,CAAN,CAAL,CAAkDE,IAAlD,CAAwDT,GAAD,IAAS;MACrE,OAAO,KAAKD,YAAL,CAAkBC,GAAlB,CAAP;IACD,CAFM,CAAP;EAGD;;EAEDU,WAAW,GAAG;IACZ,OAAO,KAAKJ,MAAL,CAAa,GAAE,KAAKT,IAAK,OAAzB,EAAiC;MACtCc,MAAM,EAAE;IAD8B,CAAjC,CAAP;EAGD;;EAEDC,WAAW,GAAG;IACZ,OAAO,KAAKN,MAAL,CAAa,GAAE,KAAKT,IAAK,UAAzB,EAAoC;MACzCc,MAAM,EAAE;IADiC,CAApC,CAAP;EAGD;;EAEDE,cAAc,QAAgB;IAAA,IAAf;MAAEC,IAAF;MAAQC;IAAR,CAAe;IAC5B,OAAO,KAAKT,MAAL,CAAa,GAAE,KAAKT,IAAK,UAAzB,EAAoC;MACzCc,MAAM,EAAE,OADiC;MAEzCK,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBJ,IADmB;QAEnBK,KAAK,EAAEJ;MAFY,CAAf;IAFmC,CAApC,CAAP;EAOD;;EAEDK,aAAa,QAAiB;IAAA,IAAhB;MAAEN,IAAF;MAAQO;IAAR,CAAgB;IAC5B,OAAO,KAAKf,MAAL,CAAa,GAAE,KAAKT,IAAK,OAAzB,EAAiC;MACtCc,MAAM,EAAE,MAD8B;MAEtCK,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBJ,IADmB;QAEnBO;MAFmB,CAAf;IAFgC,CAAjC,CAAP;EAOD;;EAEDC,OAAO,CAACC,EAAD,EAAK;IACV,OAAO,KAAKjB,MAAL,CAAa,GAAE,KAAKT,IAAK,SAAQ0B,EAAG,QAApC,EAA6C;MAClDZ,MAAM,EAAE;IAD0C,CAA7C,CAAP;EAGD;;EAEDa,UAAU,CAACD,EAAD,EAAK;IACb,OAAO,KAAKjB,MAAL,CAAa,GAAE,KAAKT,IAAK,SAAQ0B,EAAG,QAApC,EAA6C;MAClDZ,MAAM,EAAE;IAD0C,CAA7C,CAAP;EAGD;;EAEDc,UAAU,CAACF,EAAD,EAAK;IACb,OAAO,KAAKjB,MAAL,CAAa,GAAE,KAAKT,IAAK,SAAQ0B,EAAG,EAApC,EAAuC;MAC5CZ,MAAM,EAAE;IADoC,CAAvC,CAAP;EAGD;;EAEDe,YAAY,CAACL,IAAD,EAAO;IACjB,OAAO,KAAKf,MAAL,CAAa,GAAE,KAAKT,IAAK,iBAAzB,EAA2C;MAChDc,MAAM,EAAE,OADwC;MAEhDK,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;QACnBS,MAAM,EAAEN;MADW,CAAf;IAF0C,CAA3C,CAAP;EAMD;;AA5EO;;AA+EV,OAAO,MAAMO,GAAG,GAAG,IAAInC,GAAJ,CAAQ;EACzBE,GAAG,EAAE,wCADoB;EAEzBC,OAAO,EAAE;IACPiC,aAAa,EAAE,sCADR;IAEP,gBAAgB;EAFT;AAFgB,CAAR,CAAZ"},"metadata":{},"sourceType":"module"}